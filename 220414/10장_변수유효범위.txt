몰랐던 것 : 

전체전역변수
 - 1.c에서 선언된 전역변수 int data1; 를 2.c에서 사용하려면
    extern int data1을 전역변수 사용 선언을 해줘야함 
	- 그냥 int data로 전역변수 선언된것을 말함

 - static int svar;(전역변수 선언시) > 파일 전역 유효범위임.
 
 ** 다른 파일에서 선언한 전역변수를 사용하고자 
   전역변수 사용 선언하는 방법을 알아야함 ***

 지역변수 선언시 - register : 레지스터에 저장됨

 static 변수 : 정적 변수
  - 전역변수시 : 한 파일내에서.
  -  지역변수시 : ??

레지스터 변수 
 - 처리속도를 증가시키려는 변수에 이용

 - 정적 변수와 static
  정적변수 : 프로그램 종료시 메모리에서 제거.
	   초기화시 단 한번만 선언됨.
  정적 지역변수(*****) : 함수, 블록안에서 정적선언변수.
	- 참조는 블록내부에서만
(정적인 성질)- 함수, 블록을 종료해도 메모리에서 제거되지않음
	- 유효범위 == 지역변수
	- 함수가 끝나도 정적 지역변수의 값은 유지됨*****


메모리영역(데이터,힙, 스택)
 데이터 : 전역변수, 정적(지역, 전역) 변수 저장되는 공간
 힙 : 동적 할당되는 변수 할당 공간
 스택 : 함수호출에 의한 매개변수, 지역변수 할당 공간.
  데이터- 힙 - 스택 (낮은주소 -> 높은주소) 부터 사용
 0 4 8 16 ...      1000. 1004


ㅁ 변수 범위 와 지역 변수

  - 전역변수
	- 전체 전역 변수 : 다른파일에서도 사용 가능(int a로 선언시, 다른 파일에서 extern int a 사용선언으로 사용가능)
	- 파일 전역 변수 : static으로 선언된것으로, 같은 파일내에서만 사용가능

  - 지역변수
	- 함수, 블록이 종료되는순간 메모리에서 자동으로 제거.

ㅁ 변수의 4가지 기억 분류
  - auto, register, static, extern.
	- auto : 그냥 일반적인것. 지역변수에 쓰임.
	- register : 반복적인 변수의 계산이 빠르게 하기위한 선언, 레지스터에 선언됨
	- static : 전역변수, 지역변수로 사용가능. 
		- 전역변수 시 : 파일내에서만 사용가능
		- 지역변수 시 : 함수, 블록 호출이 끝나도 값 자체는 살아있음.


ㅁ 데이터, 힙, 스택 영역
	- 데이터 : 전역변수, 정적변수가 할당 되는 공간
	- 힙 : 동적 할당되는 변수가 할당되는 저장 공간
	- 스택 영역 : 지역변수, 매개변수등이 저장되는 공간.





